{"ast":null,"code":"// import axios from \"axios\";\n\n// const axiosInstance = axios.create({\n//   baseURL: \"http://localhost:4000/api/wallet\",\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//   },\n// });\n\n// axiosInstance.interceptors.request.use((config) => {\n//   const token = localStorage.getItem(\"token\");\n//   if (token) config.headers.Authorization = `Bearer ${token}`;\n//   return config;\n// });\n\n// export default axiosInstance;\n// axiosInstance.js\nimport axios from \"axios\";\nconst axiosInstance = axios.create({\n  baseURL: \"http://localhost:4000\",\n  // ✅ Match your backend URL\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Add auth token if needed\naxiosInstance.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  if (user && user.token) {\n    config.headers.Authorization = `Bearer ${user.token}`;\n  }\n  return config;\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","headers","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","token","Authorization"],"sources":["C:/Users/Harshita Singh/Desktop/home/home/src/utils/axiosInstance.js"],"sourcesContent":["// import axios from \"axios\";\r\n\r\n// const axiosInstance = axios.create({\r\n//   baseURL: \"http://localhost:4000/api/wallet\",\r\n//   headers: {\r\n//     \"Content-Type\": \"application/json\",\r\n//   },\r\n// });\r\n\r\n// axiosInstance.interceptors.request.use((config) => {\r\n//   const token = localStorage.getItem(\"token\");\r\n//   if (token) config.headers.Authorization = `Bearer ${token}`;\r\n//   return config;\r\n// });\r\n\r\n// export default axiosInstance;\r\n// axiosInstance.js\r\nimport axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"http://localhost:4000\", // ✅ Match your backend URL\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Add auth token if needed\r\naxiosInstance.interceptors.request.use((config) => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  if (user && user.token) {\r\n    config.headers.Authorization = `Bearer ${user.token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default axiosInstance;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAE,uBAAuB;EAAE;EAClCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACjD,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,IAAIJ,IAAI,IAAIA,IAAI,CAACK,KAAK,EAAE;IACtBN,MAAM,CAACJ,OAAO,CAACW,aAAa,GAAG,UAAUN,IAAI,CAACK,KAAK,EAAE;EACvD;EACA,OAAON,MAAM;AACf,CAAC,CAAC;AAEF,eAAeP,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}